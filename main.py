'''7201557142:AAGsRgmXVOW67wi2044bmnXYbPHiX8O4Urc'''
import telebot
from telebot import types
import logging

# создаем бота
bot = telebot.TeleBot('7201557142:AAGsRgmXVOW67wi2044bmnXYbPHiX8O4Urc')

# настройка логирования
logging.basicConfig(level=logging.INFO)

# предопределенные ответы
responses = {
    '1': """\
1. Главный корпус - г. Омск, пр-кт Мира, д. 11 (ГК)
2. Учебно-лабораторный корпус №1 - г. Омск, пр-кт Мира, д. 11, корпус 1 (УЛК-1)
3. Учебно-лабораторный корпус №2 - г. Омск, пр-кт Мира, д. 11 (УЛК-2)
4. Учебно-лабораторный корпус №3 - г. Омск, ул. Долгирева, д. 79 (УЛК-3)
5. Учебно-лабораторный корпус №4 - г. Омск, ул. Долгирева, д. 79 (УЛК-4)
6. Учебно-лабораторный корпус №5 - г. Омск, пр-кт Мира, д. 32А (УЛК-5)
7. Учебно-лабораторный корпус №6 - г. Омск, пр-кт Мира, д. 11 (УЛК-6)
8. Учебно-лабораторный корпус №7 - г. Омск, пр-кт Мира, д. 30А (УЛК-7)
9. Учебно-лабораторный корпус №8 - г. Омск, пр-кт Мира, д. 11 (УЛК-8)
10. Учебно-лабораторный корпус №9 - г. Омск, ул. Нефтезаводская, д. 33Б (УЛК-9)
11. Учебно-лабораторный корпус №10 - г. Омск, ул. Химиков, д. 13 (УЛК-10)
12. Учебно-лабораторный корпус №11 - г. Омск, ул. Химиков, д. 15 (УЛК-11)
13. Учебно-лабораторный корпус №12 - г. Омск, ул. Звездная, д. 2Б (УЛК-12)
14. Учебно-лабораторный корпус №13 - г. Омск, ул. Певцова, д. 13, пом. 4П (УЛК-13)
15. Учебно-лабораторный корпус №14 - г. Омск, ул. Красногвардейская, д. 9, пом. 1П (УЛК-14)
16. Учебно-производственные мастерские - г. Омск, пр-т Мира, д. 11, корпус 6 (УПМ)
17. Физкультурно-оздоровительный корпус - г. Омск, пр-кт Мира, д. 11 (ФОК)
18. Медиацентр, столовая - г. Омск, пр-кт Мира, д. 11 (Медиацентр)
19. Бассейн - г. Омск, пр-кт Мира, д. 11, корпус 7 (Бассейн)
20. Военно-учебный корпус №1 (Тир) - г. Омск, ул. Долгирева, д. 79 (ВУК-1)
21. Военно-учебный корпус №2 (общежитие № 1) - г. Омск, ул. Долгирева, д. 81 (ВУК-2)
22. Военно-учебный корпус №3 (склад) - г. Омск, ул. Долгирева, д. 79 (ВУК-3)
23. Военно-учебный корпус №4 (танковый парк) - г. Омск, ул. Долгирева, д. 79, пом 2П (ВУК-4)
24. Военно-учебный корпус №5 - г. Омск, ул. Долгирева, д. 79 (ВУК-5)
25. Военно-учебный корпус №6 - г. Омск, ул. Долгирева, д. 81 (ВУК-6)
26. Военно-учебный корпус №7 (гараж) - г. Омск, ул. Долгирева, д. 79 (ВУК-7)
27. Общежитие №1 - г. Омск, ул. Долгирева, д. 81 (Общежитие-1)
28. Общежитие №3 - г. Омск, ул. Красногвардейская, д. 9А (Общежитие-3)
29. Общежитие №5 - г. Омск, ул. 2-я Поселковая, д. 3 (Общежитие-5)
30. Общежитие №6 - г. Омск, ул. 2-я Поселковая, д. 3, корпус 1 (Общежитие-6)
31. Общежитие №7 - г. Омск, ул. 2-я Поселковая, д. 6 (Общежитие-7)\
""",
    '2': 'В исключительных случаях, при наличии уважительной причины, сделать это можно в срок до 4 сентября (пятница).',
    '3': 'Первая цифра - корпус, затем число - аудитория.',
    '4': 'Нет. Занятия построены по принципу «лекции-практики». Сначала идет начитка лекционного материала. Как правило, академические группы объединяются в «поток». Затем лекционный материал разбирается и закрепляется на практических занятиях для каждой академической группы отдельно. Лекции проводятся в больших лекционных (поточных) аудиториях, а практические занятия в более мелких аудиториях или компьютерных классах.',
    '5': 'Да, посещение занятий является обязательным. Староста академической группы ведет журнал посещаемости, в котором, совместно с преподавателем, отмечает все пропуски студентов. Большое количество пропусков по неуважительной причине может стать весомым фактором для отчисления.',
    '6': 'Куратор – это сотрудник факультета, помощник каждого студента группы. К нему можно обращаться по организационным вопросам обучения, решения конфликтных ситуаций, организации досуга группы и т.п.',
    '7': 'Для этого необходимо принимать активное участие в конференциях, форумах, круглых столах, соревнованиях, квестах и прочих мероприятиях, проводимых на факультете.',
    '8': 'Если у тебя появляются вопросы по различным сферам жизни на факультете, запомни, что за каждое направление деятельности есть свой ответственный человек:\n- вопрос по учебной деятельности – зам. декана по учебной работе;\n- вопрос по внеучебной деятельности – зам. декана по воспитательной работе;\n- вопрос по научной деятельности – зам. декана по научной работе;\n- сложно определить область вопроса – методисты деканата;\n- многогранные, необычные и философские вопросы – лично к декану.',
    '9': 'Студенческий билет – это документ, удостоверяющий, что ты являешься студентом. Также он служит пропуском в учебные корпуса, по нему оформляются все студенческие скидки и он, в особых случаях, оставляется под залог. Вещь крайней ценности. В случае утери в деканате выдается дубликат (но лучше не терять, т.к. процесс восстановления – вещь крайне трудоемкая (и для вас, и для деканата) и затратная (для вас)).',
    '10': 'Оценка по физкультуре ставится за посещение и сдачу нормативов на специализированных секциях. Если вы ходили в течение семестра и сдали нормативы, то вы получаете зачет. Небольшое количество пропусков занятий по физкультуре можно отработать: прийти не в свою пару; если пропусков много – на вас ложится докладная в деканат, начинаются проблемы и преподаватель может не допустить вас на отработку. Отсутствие (несдача) зачета по физкультуре является причиной для отчисления студента.',
    '11': 'Все материальные выплаты производятся на личную банковскую карту студента. Банковские карты ОАО «ВТБ-Банк» оформляются централизованно, через старосту.'
}

# соответствие вопросов и идентификаторов
questions = {
    'Где находится каждый корпус?': '1',
    'До какого числа я могу принести оригинал аттестата?': '2',
    'Как понять номер аудитории?': '3',
    'Правда ли, что лекции и практики идут отдельно?': '4',
    'Обязательно ли посещать все занятия?': '5',
    'Кто такой куратор?': '6',
    'Как попасть в студенческое самоуправление?': '7',
    'К кому обращаться, если появляются вопросы?': '8',
    'Зачем нужен студенческий билет?': '9',
    'За что ставится оценка по физкультуре?': '10',
    'Как и где я буду получать стипендию?': '11'
}

# обработка команды /start
@bot.message_handler(commands=['start'])
def handle_start(message):
    logging.info(f"User {message.chat.id} started the bot")
    markup = types.InlineKeyboardMarkup()
    for question, id in questions.items():
        markup.add(types.InlineKeyboardButton(question, callback_data=id))
    bot.send_message(message.chat.id, "Привет! Чем могу помочь?", reply_markup=markup)

# обработка нажатия кнопок
@bot.callback_query_handler(func=lambda call: call.data in responses)
def handle_callback_query(call):
    response = responses[call.data]
    bot.send_message(call.message.chat.id, response)
    markup = types.InlineKeyboardMarkup()
    btn_more = types.InlineKeyboardButton('Ещё вопрос', callback_data='more')
    markup.add(btn_more)
    bot.send_message(call.message.chat.id, "Ещё вопрос?", reply_markup=markup)

@bot.callback_query_handler(func=lambda call: call.data == 'more')
def handle_more_questions(call):
    markup = types.InlineKeyboardMarkup()
    for question, id in questions.items():
        markup.add(types.InlineKeyboardButton(question, callback_data=id))
    bot.send_message(call.message.chat.id, "Выберите вопрос:", reply_markup=markup)

# запускаем бота с обработкой ошибок
try:
    bot.polling()
except Exception as e:
    logging.error(f"Error: {e}")
